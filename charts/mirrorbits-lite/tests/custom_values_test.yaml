suite: Tests with custom values
set:
  image:
    pullPolicy: Always
  logs:
    volume:
      persistentVolumeClaim:
        claimName: foobar
  geoipupdate:
    account_id: my-account-id
    license_key: my-license-key
  ingress:
    enabled: true
    hosts:
      - host: chart-example.local
        paths:
        - path: /
          pathType: IfNotPresent
templates:
  - deployment.yaml
  - ingress.yaml
  - secret.yaml # Direct dependency of deployment(.*).yaml
  - service
tests:
  - it: Should set the correct service selector labels when a fullNameOverride is specified
    template: service.yaml
    set:
      fullNameOverride: "my-fullNameOverride"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.selector["app.kubernetes.io/name"]
          value: "mirrorbits-lite"
      - equal:
          path: spec.selector["app.kubernetes.io/instance"]
          value: "RELEASE-NAME"
  - it: should define a customized "mirrorbits-lite" deployment
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[*].imagePullPolicy
          value: Always
      # Log volumes is a custom PVC
      - equal:
          path: spec.template.spec.volumes[2].name
          value: logs
      - equal:
          path: spec.template.spec.volumes[2].persistentVolumeClaim.claimName
          value: foobar
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].name
          value: logs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].mountPath
          value: /var/log/mirrorbits
  - it: should create ingress with pathType set to the specified custom value by default
    template: ingress.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "IfNotPresent"

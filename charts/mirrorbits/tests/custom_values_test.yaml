suite: Tests with custom values
set:
  ingress:
    enabled: true
    hosts:
      - host: chart-example.local
        paths:
        - path: /
          pathType: IfNotPresent
  image:
    files:
      pullPolicy: Never
    mirrorbits:
      pullPolicy: Always
  geoipupdate:
    account_id: my-account-id
    license_key: my-license-key
  rsyncd:
    enabled: true
  mirrorbits:
    logs:
      volume:
        persistentVolumeClaim:
          claimName: foobar
  affinity:
    mirrorbits:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                    - mirrorbits
            topologyKey: "kubernetes.io/hostname"
    files:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                    - mirrorbits-files
            topologyKey: "kubernetes.io/hostname"
    rsyncd:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                    - mirrorbits-rsyncd
            topologyKey: "kubernetes.io/hostname"
  poddisruptionbudget:
    mirrorbits:
      minAvailable: 1
    mirrorbitsFiles:
      minAvailable: 1
    mirrorbitsRsyncd:
      minAvailable: 1


templates:
  - deployment.yaml
  - deployment.files.yaml
  - deployment.rsyncd.yaml
  - ingress.yaml
  - secret.yaml # Direct dependency of deployment(.*).yaml
  - service.files.yaml
  - service.rsyncd.yaml
  - pdb.yaml
  - pdb.files.yaml
  - pdb.rsyncd.yaml
tests:
  - it: Should set the correct service selector labels when a fullNameOverride is specified
    template: service.files.yaml
    set:
      fullNameOverride: "my-fullNameOverride"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.selector["app.kubernetes.io/name"]
          value: "mirrorbits-files"
      - equal:
          path: spec.selector["app.kubernetes.io/instance"]
          value: "RELEASE-NAME-files"
  - it: Should set the correct service selector labels when a nameOverride is specified
    template: service.files.yaml
    set:
      nameOverride: "my-nameOverride"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.selector["app.kubernetes.io/name"]
          value: "my-nameOverride-files"
      - equal:
          path: spec.selector["app.kubernetes.io/instance"]
          value: "RELEASE-NAME-files"
  - it: should define a customized "files" deployment
    template: deployment.files.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: "spec.template.spec.containers[*].imagePullPolicy"
          value: Never
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey
          value: "kubernetes.io/hostname"
  - it: should define a customized "mirrorbits" deployment
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[*].imagePullPolicy
          value: Always
      # Log volumes is a custom PVC
      - equal:
          path: spec.template.spec.volumes[2].name
          value: logs
      - equal:
          path: spec.template.spec.volumes[2].persistentVolumeClaim.claimName
          value: foobar
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].name
          value: logs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].mountPath
          value: /var/log/mirrorbits
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey
          value: "kubernetes.io/hostname"
  - it: should create ingress with pathType set to the specified custom value by default
    template: ingress.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "IfNotPresent"
  - it: should create rsyncd deployment if rsyncd is enabled
    template: deployment.rsyncd.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].topologyKey
          value: "kubernetes.io/hostname"
  - it: should create rsyncd service if rsyncd is enabled
    template: service.rsyncd.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
  - it: should ensure the pdb has correct spec
    template: pdb.yaml
    set:
      replicaCount.mirrorbits: 2
      poddisruptionbudget.mirrorbits.minAvailable: 2
      poddisruptionbudget.mirrorbits.maxUnavailable: 3
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "mirrorbits"
  - it: should ensure the pdb.files has correct spec
    template: pdb.files.yaml
    set:
      replicaCount.files: 2
      poddisruptionbudget.files.minAvailable: 2
      poddisruptionbudget.files.maxUnavailable: 3
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "mirrorbits-files"
  - it: should ensure the pdb.rsyncd has correct spec
    template: pdb.rsyncd.yaml
    set:
      replicaCount.rsyncd: 2
      poddisruptionbudget.rsyncd.minAvailable: 2
      poddisruptionbudget.rsyncd.maxUnavailable: 3
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "mirrorbits-rsyncd"

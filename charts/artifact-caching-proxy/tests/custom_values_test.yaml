suite: Tests with custom values
templates:
  - ingress-health.yaml
  - ingress.yaml
  - pdb.yaml
  - statefulset.yaml
  - nginx-default-configmap.yaml
  - nginx-proxy-configmap.yaml
tests:
  - it: Should set a custom env and envFrom when specified by values
    template: statefulset.yaml
    set:
      env:
        - name: DEMO_GREETING
          value: "Hello from the environment"
      envFrom:
        - secretRef:
            name: demo-greeting
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: StatefulSet
      - equal:
          path: spec.template.spec.containers[0].env[0].name
          value: "DEMO_GREETING"
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: "Hello from the environment"
      - equal:
          path: spec.template.spec.containers[0].envFrom[0].secretRef.name
          value: "demo-greeting"
  - it: Should set a custom health check path when specified by values
    template: ingress.yaml
    set:
      ingress:
        enabled: true
        annotations:
          a-custom/annotation: "hello world"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "/"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "ImplementationSpecific"
      - equal:
          path: metadata.annotations
          value:
            a-custom/annotation: "hello world"

  - it: Should set a custom health check path when specified by values
    template: ingress-health.yaml
    set:
      ingress:
        enabled: true
        healthPath: "la-cite-de-la-peur"
        healthPathType: "fait-peur"
        annotations:
          a-custom/annotation: "hello world"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].path
          value: "la-cite-de-la-peur"
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "fait-peur"
      - equal:
          path: metadata.annotations
          value:
            a-custom/annotation: "hello world"
  - it: should create a PDB with defaults when multiple replicas are set
    template: pdb.yaml
    set:
      replicaCount: 2
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 1
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "artifact-caching-proxy"
  - it: should create a PDB with the custom setup when custom values are set
    template: pdb.yaml
    set:
      replicaCount: 2
      poddisruptionbudget.minAvailable: 2
      poddisruptionbudget.maxUnavailable: 3
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "artifact-caching-proxy"

suite: Test with custom values
templates:
  - deployment.yaml
  - ingress.yaml
  - secret.yaml # Direct dependency of deployment.yaml
  - pdb.yaml
tests:
  - it: should create a Secret with the correct value
    set:
      ldap:
        password: ldap-password
      jira:
        password: jira-password
      smtp:
        password: smtp-password
    template: secret.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Secret
      - equal:
          path: data.ldapPassword
          value: bGRhcC1wYXNzd29yZA==
      - equal:
          path: data.jiraPassword
          value: amlyYS1wYXNzd29yZA==
      - equal:
          path: data.smtpPassword
          value: c210cC1wYXNzd29yZA==
  - it: should create a Deployment with the customized values
    set:
      image:
        pullPolicy: Always
      resources:
        limits:
          memory: 1024Mi
        requests:
          cpu: 500m
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 1024Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 500m
  - it: should ensure the pdb has correct spec
    template: pdb.yaml
    set:
      replicaCount: 2
      poddisruptionbudget.minAvailable: 2
      poddisruptionbudget.maxUnavailable: 1
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "accountapp"
